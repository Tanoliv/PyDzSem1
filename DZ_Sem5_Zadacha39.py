'''
39(1). Создайте программу для игры с конфетами человек против человека.
 Реализовать игру игрока против игрока в терминале. Игроки ходят друг за другом,
 вписывая желаемое количество конфет. Первый ход определяется жеребьёвкой.
 В конце вывести игрока, который победил

Условие задачи: На столе лежит 221 конфета. Играют два игрока делая ход друг после друга.
 Первый ход определяется жеребьёвкой. За один ход можно забрать не более чем 28 конфет.
 Все конфеты оппонента достаются сделавшему последний ход. 

В качестве дополнительного усложнения можно:
        a) Добавьте игру против бота ( где бот берет рандомное количество конфет от 0 до 28)

        b) Подумайте как наделить бота ""интеллектом"" (есть алгоритм, позволяющий выяснить
         какое количесвто конфет необходимо брать, чтобы гарантированно победить,
         соответственно внедрить этот алгоритм боту )
'''

from random import randint



def take_conf(name):
    n= int (input( 'введите сколько конфет вы возьмете от 1 до 28: '))
    while n<1 or n>28:
         n=  int (input( 'введите корректное количество конфет от 1 до 28: '))
    return n
step= lambda name, k, sum, col_conf:print('Ходил', name, 'взял', k, 'конфет',
'у него', sum, 'конфет. Осталось', col_conf, 'конфет')

name1= input('Введите имя первого игрока:  ')
name2= input('Введите имя второго игрока:  ')

col_conf= int(input('Введите розыгрываемое количество конфет:   '))

first_step= randint(0,2)
if first_step:
    print('Ходит', name1)
else:
    print('Ходит', name2)

def name(first_step):
        if first_step == 0:
           return  name1
        else:
           return  name2


sum1= 0
sum2= 0

while col_conf >28:
    if first_step:
        k= take_conf(name1)
        sum1+= k
        col_conf-= k
        first_step= False
        step(name1, k, sum1, col_conf)
    else:
        k= take_conf(name2)
        sum2+= k
        col_conf-= k
        first_step= True
        step(name2, k, sum2, col_conf)
if first_step:
    print('Выиграл', name1)
else:
    print('Выиграл', name2)